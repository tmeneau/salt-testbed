# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'socket'
require 'yaml'

#
# Configure the various parameters available when provisioning remote minions
#
master_ip = nil
mem_per_system = 2048
num_systems = 2
name_prefix = Socket.gethostbyname(Socket.gethostname).first
bridge_interface = nil

#
# see the salt-bootstrap README for details:
# https://github.com/saltstack/salt-bootstrap
#
salt_version = "git v2015.8.0"

yaml_config_file = File.dirname(__FILE__) + "/testbed.yml"
yaml_config = nil
if File.file?(yaml_config_file)
  puts "Loading "+yaml_config_file
  yaml_config = YAML.load_file(yaml_config_file)
end

if yaml_config
  master_ip = yaml_config.has_key?("master_ip") ? yaml_config['master_ip'] : master_ip
  mem_per_system = yaml_config.has_key?('minion_mem') ? yaml_config['minion_mem'] : mem_per_system
  num_systems = yaml_config.has_key?("minion_count") ? yaml_config["minion_count"] : num_systems
  name_prefix = yaml_config.has_key?("minion_name_prefix") ? yaml_config["minion_name_prefix"] : name_prefix
  bridge_interface = yaml_config.has_key?("bridge_interface") ? yaml_config["bridge_interface"] : bridge_interface
  salt_version = yaml_config.has_key?('salt_version') ? yaml_config['salt_version'] : salt_version
end

master_ip = ENV['MASTER_IP'] ? ENV['MASTER_IP'] : master_ip
mem_per_system = ENV['MINION_MEM'] ? ENV['MINION_MEM'] : mem_per_system
num_systems = ENV['MINION_COUNT'] ? ENV['MINION_COUNT'] : num_systems
name_prefix = ENV['MINION_NAME_PREFIX'] ? ENV['MINION_NAME_PREFIX'] : name_prefix
bridge_interface = ENV['BRIDGE_INTERFACE'] ? ENV['BRIDGE_INTERFACE'] : bridge_interface
salt_version = ENV['SALT_VERSION'] ? ENV['SALT_VERSION'] : salt_version

up_included=false
ARGV.each do|a|
  if a == "up"
    up_included=true
  end
end

if up_included
  unless ENV['MASTER_IP'] or (yaml_config and yaml_config.has_key?("master_ip") and yaml_config['master_ip'].length != 0)
    raise Vagrant::Errors::VagrantError.new, "Missing required environment variable MASTER_IP"
  end
end


$minion_setup = <<SCRIPT
  # https://github.com/saltstack/salt-bootstrap
  curl -L https://bootstrap.saltstack.com -o install_salt.sh
  sudo sh install_salt.sh -M -U #{salt_version}

  sed -i "s/#master:.*/master: MASTER_IP_ADDR/g" /etc/salt/minion
  service salt-minion restart
SCRIPT

if up_included
  $minion_setup = $minion_setup.sub("MASTER_IP_ADDR", ENV['MASTER_IP'] ? ENV['MASTER_IP'] : yaml_config['master_ip'] )
end

$hostname_setup = <<SCRIPT
  echo "$1" > /etc/hostname
  hostname "$1"
  sed -i "s/127.0.0.1\\(.\\+\\)/127.0.0.1\\1 $1/g" /etc/hosts
SCRIPT

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  (1..num_systems).each do |i|
    minion_name = "#{name_prefix}-minion#{i}"
    config.vm.define minion_name do |minion|
      minion.vm.box = "ubuntu/trusty64"
      minion.vm.provider "virtualbox" do |v|
        v.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/vagrant", "1"]
        v.memory = mem_per_system
        v.cpus = 2
      end

      minion.vm.provision "shell", inline: $hostname_setup, args: minion_name
      minion.vm.provision "shell", inline: $minion_setup
      minion.vm.network "public_network", bridge: bridge_interface
    end
  end
end